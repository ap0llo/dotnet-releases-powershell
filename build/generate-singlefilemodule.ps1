#
# This scripts combines all source files of the module into a single file to 
# make it esier to download/distribute and saves it to dist/DotNetReleasesPowershell.psm1
#

$moduleName = "DotNetReleasesPowershell"
$outputDir = Join-Path $PSScriptRoot "../dist/$moduleName"

if (-not (Test-Path $outputDir)) {
    New-Item -ItemType Directory -Path $outputDir > $null
}

$outputPath = Join-Path $outputDir "$ModuleName.psm1"

$content = @()

$content += "#"
$content += "# --------------------  WARNING --------------------"
$content += "# This file was auto-generated by '$($MyInvocation.MyCommand.Name)'"
$content += "# Do not edit this file manually as changes will be overwritten the next time the script runs"
$content += "# --------------------------------------------------"
$content += "#"


function GetAppendableContent($path) {

    $fileName = Split-Path -Path $path -Leaf
    $lines = @()
    $lines += ""
    $lines += "# --------------------------------------------------"
    $lines += "# BEGIN '$fileName'"
    $lines += "# --------------------------------------------------"
    $lines += ""
    $lines += Get-Content $path
    $lines += ""
    $lines += "# --------------------------------------------------"
    $lines += "# END '$fileName'"
    $lines += "# --------------------------------------------------"
    $lines += ""

    return $lines
}


$srcRoot = Join-Path $PSScriptRoot "../src"

$content += GetAppendableContent (Join-Path $srcRoot "variables.ps1")
$content += GetAppendableContent (Join-Path $srcRoot "model.ps1")

$commandFiles = Get-ChildItem -Path (Join-Path $srcRoot "commands") -Filter "*.ps1"
foreach ($file in $commandFiles) {
    $content += GetAppendableContent $file.FullName
}

[System.IO.File]::WriteAllLines($outputPath, $content)
